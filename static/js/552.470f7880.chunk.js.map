{"version":3,"file":"static/js/552.470f7880.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.js","components/DeleteContactWarning/DeleteContactWarning.styled.jsx","components/DeleteContactWarning/DeleteContactWarning.js","pages/contacts/ContactsPage.styled.jsx","pages/contacts/ContactsPage.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectShowModal = state => state.contacts.showModal;\nexport const selectDeleteId = state => state.contacts.deleteId;\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectSortedContacts = createSelector(selectContacts, contacts => {\n  [...contacts.items].sort((a, b) => a.name.localeCompare(b.name));\n});\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (!contacts) {\n      return [];\n    }\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().trim().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  width: 400px;\n  margin: 30px auto;\n  font-weight: 700;\n  font-size: 20px;\n  background-color: beige;\n  text-align: center;\n  border-radius: 20px;\n  box-shadow: 10px 15px 19px -4px rgba(0, 0, 0, 0.75);\n  -webkit-box-shadow: 10px 15px 19px -4px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 10px 15px 19px -4px rgba(0, 0, 0, 0.75);\n  text-shadow: -1px 4px 4px rgba(0, 0, 0, 0.6);\n\n  h1,\n  h2 {\n    text-align: center;\n    text-shadow: -1px 4px 4px rgba(0, 0, 0, 0.6);\n  }\n`;\nexport const Form = styled.form`\n  padding-bottom: 15px;\n  border-radius: 5px;\n  border-bottom: ${props => `1px solid ${props.theme.colors.bd}`};\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin: 5px 0 25px 0;\n  padding-top: 15px;\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nexport const DataInput = styled.input`\n  display: flex;\n  margin: 5px 10px 20px 10px;\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-shadow: 4px 4px 16px 2px rgba(166, 179, 28, 0.62) inset;\n  -webkit-box-shadow: 4px 4px 16px 2px rgba(166, 179, 28, 0.62) inset;\n  -moz-box-shadow: 4px 4px 16px 2px rgba(166, 179, 28, 0.62) inset;\n  box-sizing: border-box;\n`;\n\nexport const SubmitButton = styled.button`\n  margin-bottom: 15px;\n  background-color: #c2fbd7;\n  border-radius: 100px;\n  box-shadow: rgba(0, 0, 0, 0.24) 10px 10px 5px 0px;\n  color: green;\n  cursor: pointer;\n  display: inline-block;\n  font-family: CerebriSans-Regular, -apple-system, system-ui, Roboto, sans-serif;\n  padding: 7px 20px;\n  text-align: center;\n  text-decoration: none;\n  transition: all 250ms;\n  border: 0;\n  font-size: 16px;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n\n  &:hover {\n    box-shadow: rgb(255, 255, 255) -2px -2px 5px, rgb(139, 167, 147) 2px 2px 5px;\n    transform: scale(1.05) rotate(-1deg);\n  }\n\n  &:active {\n    background: rgb(33, 147, 90);\n    box-shadow: 0 3px rgb(33, 147, 90) inset;\n  }\n`;\n\nexport const Icon = styled.div`\n  margin-right: 8px;\n`;\n\nexport const IconWrapper = styled.div`\n  position: absolute;\n  top: ${props => props.top};\n  left: ${props => props.left};\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RiUserAddLine } from 'react-icons/ri';\nimport { IoMdPersonAdd } from 'react-icons/io';\nimport { BsFillTelephoneFill } from 'react-icons/bs';\nimport { nanoid } from 'nanoid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport * as Yup from 'yup';\nimport { addContact } from 'redux/contacts/operations.js';\nimport { selectContacts } from 'redux/contacts/selectors.js';\nimport {\n  DataInput,\n  Form,\n  Icon,\n  IconWrapper,\n  Wrapper,\n  SubmitButton,\n  Label,\n} from './ContactForm.styled';\n\nconst notifyOptions = {\n  position: 'top-right',\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n};\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Name may contain only letters, apostrophe, dash and spaces'\n    )\n    .required('Name is required'),\n  number: Yup.string()\n    .matches(\n      /^\\+\\d{1,4}[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/,\n      'Invalid phone number. The number must start with a plus sign and contain valid digits and separators'\n    )\n    .required('Number is required'),\n});\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [formErrors, setFormErrors] = useState({});\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const addContacts = contact => {\n    const existingContact = contacts.find(({ name }) => name === contact.name);\n\n    if (existingContact) {\n      toast.error(`${contact.name} is already in contacts`, notifyOptions);\n      return;\n    }\n    dispatch(addContact(contact));\n    setFormErrors({});\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await schema.validate({ name, number }, { abortEarly: false });\n      const contact = {\n        id: nanoid(10),\n        name,\n        number,\n      };\n      addContacts(contact);\n      clearForm();\n    } catch (error) {\n      if (error instanceof Yup.ValidationError) {\n        const errors = {};\n        error.inner.forEach(err => {\n          errors[err.path] = err.message;\n        });\n        setFormErrors(errors);\n      }\n      console.log(error.message);\n    }\n  };\n\n  const clearForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit} validationSchema={schema}>\n        <Label>\n          <IconWrapper top=\"18px\" left=\"152px\">\n            <IoMdPersonAdd size=\"16\" />\n          </IconWrapper>\n          Name\n          <DataInput\n            type=\"text\"\n            name=\"name\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </Label>\n        <Label>\n          <IconWrapper top=\"143px\" left=\"140px\">\n            <BsFillTelephoneFill size=\"16\" />\n          </IconWrapper>\n          Number\n          <DataInput\n            type=\"tel\"\n            name=\"number\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n        </Label>\n        <SubmitButton type=\"submit\">\n          <Icon>\n            <RiUserAddLine size=\"16\" />\n          </Icon>\n          Add contact\n        </SubmitButton>\n      </Form>\n      {Object.keys(formErrors).length > 0 && (\n        <div>\n          {Object.values(formErrors).map((error, index) => (\n            <div key={index}>{error}</div>\n          ))}\n        </div>\n      )}\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        closeOnClick\n        pauseOnHover\n        draggable\n      />\n    </Wrapper>\n  );\n}\n\nexport default ContactForm;\n","import styled from 'styled-components';\nimport { FcSearch } from 'react-icons/fc';\n\nexport const FilterTitle = styled.label`\n  position: relative;\n  align-items: center;\n  text-shadow: -1px 4px 4px rgba(0, 0, 0, 0.6);\n  display: flex;\n  flex-direction: column;\n  margin: 5px 0 25px 0;\n  padding-top: 15px;\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nexport const Icon = styled(FcSearch)`\n  position: absolute;\n  margin-right: 220px;\n  bottom: 58px;\n`;\n\nexport const FilterInput = styled.input`\n  margin: 20px auto 0 auto;\n  width: 350px;\n  padding: 8px 16px;\n  border: 0px;\n  border-radius: 8px;\n  box-shadow: rgb(139, 167, 147) 1px 1px 3px inset,\n    rgb(255, 255, 255) -1px -1px 5px inset;\n  font-style: italic;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors.js';\nimport { filterContacts } from 'redux/contacts/filterSlice';\nimport { FilterInput, Icon, FilterTitle } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChangeFilter = e => {\n    dispatch(filterContacts(e.currentTarget.value));\n  };\n  return (\n    <FilterTitle>\n      <Icon size=\"18\" />\n      Find contacts by name\n      <FilterInput\n        type=\"text\"\n        value={filter}\n        onChange={handleChangeFilter}\n        placeholder=\"search\"\n      />\n    </FilterTitle>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\nimport { TiUserDeleteOutline } from 'react-icons/ti';\n\nexport const ContactItemWrapper = styled.li`\n  margin: 10px;\n  padding: 5px;\n  justify-content: space-between;\n`;\n\nexport const ContactData = styled.div`\n  margin: 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 17px;\n`;\n\nexport const ContactName = styled.span`\n  flex-grow: 1;\n  margin-right: 10px;\n`;\n\nexport const DeleteButton = styled.button`\n  background-color: #c2fbd7;\n  border-radius: 100px;\n  box-shadow: rgba(0, 0, 0, 0.24) 10px 10px 5px 0px;\n  color: green;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  font-family: CerebriSans-Regular, -apple-system, system-ui, Roboto, sans-serif;\n  padding: 7px 20px;\n  text-align: center;\n  text-decoration: none;\n  transition: all 250ms;\n  border: 0;\n  font-size: 16px;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n\n  &:hover {\n    box-shadow: rgb(255, 255, 255) -2px -2px 5px, rgb(139, 167, 147) 2px 2px 5px;\n    transform: scale(1.05) rotate(-1deg);\n  }\n\n  &:active {\n    background: rgb(33, 147, 90);\n    box-shadow: 0 3px rgb(33, 147, 90) inset;\n  }\n`;\n\nexport const DeleteIcon = styled(TiUserDeleteOutline)`\n  margin-left: 5px;\n`;\n\nexport const FirstLetterBox = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  font-weight: 700;\n  font-size: 22px;\n  text-shadow: 0 0 1px #000000;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { toggleModal } from 'redux/contacts/contactsSlice';\nimport {\n  ContactData,\n  ContactItemWrapper,\n  ContactName,\n  DeleteButton,\n  DeleteIcon,\n  FirstLetterBox,\n} from './ContactItem.styled';\n\nexport const ContactItem = ({ id, name, number, randomColor }) => {\n  const dispatch = useDispatch();\n  const handleToggleModal = () => dispatch(toggleModal(id));\n\n  return (\n    <ContactItemWrapper>\n      <ContactData>\n        <FirstLetterBox style={{ background: `${randomColor}` }}>\n          {name[0]}\n        </FirstLetterBox>\n        <ContactName>\n          {name}: {number}\n        </ContactName>\n        <DeleteButton type=\"button\" onClick={() => dispatch(handleToggleModal)}>\n          Delete <DeleteIcon size=\"16\" />\n        </DeleteButton>\n      </ContactData>\n    </ContactItemWrapper>\n  );\n};\n\nContactItem.propTypes = {\n  //   id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  randomColor: PropTypes.string,\n};\n","import styled from 'styled-components';\nexport const Contacts = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 30px auto;\n  width: 400px;\n  font-weight: 600;\n  font-size: 20px;\n  background-color: beige;\n  text-align: center;\n  border-radius: 20px;\n  box-shadow: 10px 15px 19px -4px rgba(0, 0, 0, 0.75);\n  -webkit-box-shadow: 10px 15px 19px -4px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 10px 15px 19px -4px rgba(0, 0, 0, 0.75);\n  text-shadow: -1px 4px 4px rgba(0, 0, 0, 0.6);\n`;\n","import { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors.js';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { Contacts } from './ContactList.styled';\n\nfunction getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\nfunction ContactList() {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <Contacts>\n      {filteredContacts.map(({ id, name, number }) => {\n        const randomColor = getRandomHexColor();\n        return (\n          <ContactItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            randomColor={randomColor}\n          />\n        );\n      })}\n    </Contacts>\n  );\n}\n\nexport default ContactList;\n","import styled from 'styled-components';\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.4);\n  z-index: 1200;\n`;\n\nexport const ModalBox = styled.div`\n  background-color: lightcyan;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: -1px -5px 7px 10px rgb(0 0 0 / 21%);\n`;\n","import { useCallback, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleModal } from 'redux/contacts/contactsSlice';\nimport { selectShowModal } from 'redux/contacts/selectors';\nimport { Overlay, ModalBox } from './Modal.styled.jsx';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ children }) => {\n  const dispatch = useDispatch();\n  const showModal = useSelector(selectShowModal);\n\n  const handleToggleModal = useCallback(() => {\n    dispatch(toggleModal());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        handleToggleModal();\n      }\n    };\n    if (showModal) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [showModal, handleToggleModal]);\n  if (!showModal) {\n    return null;\n  }\n\n  return createPortal(\n    <Overlay>\n      <ModalBox>{children} </ModalBox>\n    </Overlay>,\n    modalRoot\n  );\n};\n","import styled from 'styled-components';\n\nexport const DeleteWarning = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ModalWrapper = styled.div`\n  width: 250px;\n  height: 100px;\n  border-radius: 5px;\n  border: 1px solid #000;\n  box-shadow: 0px 1px 7px 6px rgba(0, 0, 0, 0.12),\n    0px 4px 3px 3px rgba(0, 0, 0, 0.06), 1px 4px 6px rgba(0, 0, 0, 0.16);\n  background-color: #dbdbdb;\n`;\n\nexport const Text = styled.div`\n  text-align: center;\n  font-weight: bold;\n`;\n\nexport const ButtonWrapper = styled.div`\n  margin-top: 15px;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const ButtonOk = styled.button`\n  margin-right: 10px;\n  background-color: #4caf50;\n  color: #fff;\n`;\n\nexport const ButtonNo = styled.button`\n  background-color: #f44336;\n  color: #fff;\n`;\n","import { useDispatch } from 'react-redux';\nimport { toggleModal } from 'redux/contacts/contactsSlice';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  ButtonNo,\n  ButtonOk,\n  ButtonWrapper,\n  DeleteWarning,\n  ModalWrapper,\n  Text,\n} from './DeleteContactWarning.styled';\n\nexport const DeleteContactWarning = ({ id }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = () => {\n    dispatch(deleteContact(id));\n    dispatch(toggleModal(id));\n  };\n  const handleCloseModal = () => {\n    dispatch(toggleModal(id));\n  };\n  return (\n    <DeleteWarning>\n      <ModalWrapper>\n        <Text>Are you sure you want to delete this contact?</Text>\n        <ButtonWrapper>\n          <ButtonOk type=\"button\" onClick={handleDeleteContact}>\n            OK\n          </ButtonOk>\n          <ButtonNo type=\"button\" onClick={handleCloseModal}>\n            No\n          </ButtonNo>\n        </ButtonWrapper>\n      </ModalWrapper>\n    </DeleteWarning>\n  );\n};\n","import styled, { keyframes } from 'styled-components';\n\nconst slideIn = keyframes`\n  0% {\n    transform: translateX(-100%);\n  }\n  100% {\n    transform: translateX(0);\n  }\n`;\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\nexport const Title = styled.h1`\n  text-align: center;\n  margin-top: 10px;\n  animation: ${slideIn} 0.5s ease-in-out forwards;\n  transform: translateX(-100%);\n`;\nexport const PhonebookWrapper = styled.div`\n  animation: ${slideIn} 0.5s ease-in-out forwards;\n  transform: translateX(-100%);\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectDeleteId,\n  selectError,\n  selectIsLoading,\n  selectShowModal,\n} from 'redux/contacts/selectors';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { Modal } from 'components/Modal/Modal';\nimport { DeleteContactWarning } from 'components/DeleteContactWarning/DeleteContactWarning';\nimport { Wrapper, Title, PhonebookWrapper } from './ContactsPage.styled.jsx';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const showModal = useSelector(selectShowModal);\n  const deleteId = useSelector(selectDeleteId);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <Title>Phonebook</Title>\n      <PhonebookWrapper>\n        <ContactForm />\n        <Title>Contacts</Title>\n        <Filter />\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            marginTop: '10px',\n          }}\n        ></div>\n        {isLoading && !error && (\n          <b style={{ textAlign: 'center' }}>Request in progress...</b>\n        )}\n\n        <ContactList />\n        {showModal && (\n          <Modal>\n            <DeleteContactWarning id={deleteId} />\n          </Modal>\n        )}\n      </PhonebookWrapper>\n    </Wrapper>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectFilter","state","filter","selectIsLoading","contacts","isLoading","selectError","error","selectShowModal","showModal","selectDeleteId","deleteId","selectContacts","items","selectFilteredContacts","createSelector","sort","a","b","name","localeCompare","toLowerCase","trim","includes","Wrapper","styled","Form","props","theme","colors","bd","Label","DataInput","SubmitButton","Icon","IconWrapper","top","left","notifyOptions","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","schema","Yup","shape","matches","required","number","dispatch","useDispatch","useSelector","useState","setName","setNumber","formErrors","setFormErrors","handleChange","e","currentTarget","value","addContacts","contact","find","toast","addContact","handleSubmit","preventDefault","validate","abortEarly","id","nanoid","clearForm","errors","inner","forEach","err","path","message","console","log","onSubmit","validationSchema","size","type","onChange","Object","keys","length","values","map","index","FilterTitle","FcSearch","FilterInput","filterContacts","placeholder","ContactItemWrapper","ContactData","ContactName","DeleteButton","DeleteIcon","TiUserDeleteOutline","FirstLetterBox","ContactItem","randomColor","handleToggleModal","toggleModal","style","background","onClick","Contacts","filteredContacts","Math","floor","random","toString","Overlay","ModalBox","modalRoot","document","querySelector","Modal","children","useCallback","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","DeleteWarning","ModalWrapper","Text","ButtonWrapper","ButtonOk","ButtonNo","DeleteContactWarning","deleteContact","slideIn","keyframes","Title","PhonebookWrapper","fetchContacts","display","justifyContent","marginTop","textAlign"],"sourceRoot":""}